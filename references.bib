@inproceedings{Br2014,
issn = {1052-8725},
abstract = {<p>In mixed-criticality systems, highly critical tasks must be temporally and logically isolated from faults in lower-criticality tasks. Such strict isolation, however, is difficult to ensure even for independent tasks, and has not yet been attained if low- and high-criticality tasks share resources subject to mutual exclusion constraints (e.g., Shared data structures, peripheral I/O devices, or OS services), as it is often the case in practical systems. Taking a pragmatic, systems-oriented point of view, this paper argues that traditional real-time locking approaches are unsuitable in a mixed-criticality context: locking is a cooperative activity and requires trust, which is inherently in conflict with the paramount isolation requirements. Instead, a solution based on resource servers (in the microkernel sense) is proposed, and MC-IPC, a novel synchronous multiprocessor IPC protocol for invoking such servers, is presented. The MC-IPC protocol enables strict temporal and logical isolation among mutually untrusted tasks and thus can be used to share resources among tasks of different criticalities. It is shown to be practically viable with a prototype implementation in LITMUSRT and validated with a case study involving several antagonistic failure modes. Finally, MC-IPC is shown to offer analytical benefits in the context of Vestal's mixed-criticality task model.</p>},
pages = {196--206},
volume = {2015-},
publisher = {IEEE},
booktitle = {2014 IEEE Real-Time Systems Symposium},
number = {January},
isbn = {9781479972876},
year = {2014},
title = {A Synchronous IPC Protocol for Predictable Access to Shared Resources in Mixed-Criticality Systems},
language = {eng},
author = {Brandenburg, Bjorn B},
keywords = {Servers ; Protocols ; Real-Time Systems ; Bandwidth ; Interference ; Context ; Delays ; Mixed-Criticality ; Freedom-From-Interference ; Temporal Isolation ; Logical Isolation ; Inter-Process Communication ; Ipc ; Real-Time Synchronization ; Multiprocessors ; Computer Science},
}

@misc{BuDa2019,
	title = {Mixed Criticality Systems - A Review (Twelfth Edition)},
	author = {Burns, Alan and Davis, Robert I.},
	year = {2019}
}

@inproceedings{Se2011,
    author           = {Sewell, Thomas and Winwood, Simon and Gammie, Peter and Murray, Toby and Andronick, June and Klein,
                        Gerwin},
    doi              = {10.1007/978-3-642-22863-6_24},
    editor           = {{Marko van Eekelen, Herman Geuvers, Julien Schmaltz, and Freek Wiedijk}},
    month            = aug,
    year             = {2011},
    keywords         = {sel4, isabelle/hol, integrity, access control, security},
    address          = {Nijmegen, The Netherlands},
    title            = {{seL4} Enforces Integrity},
    pages            = {325--340},
    booktitle        = {International Conference on Interactive Theorem Proving},
    paperurl         = {https://ts.data61.csiro.au/publications/nicta_full_text/4709.pdf},
    publisher        = {Springer}
  }

@inproceedings{Kl2009,
    author           = {Klein, Gerwin and Elphinstone, Kevin and Heiser, Gernot and Andronick, June and Cock, David and
                        Derrin, Philip and Elkaduwe, Dhammika and Engelhardt, Kai and Kolanski, Rafal and Norrish, Michael
                        and Sewell, Thomas and Tuch, Harvey and Winwood, Simon},
    month            = oct,
    video            = {https://www.sigops.org/s/conferences/sosp/2009/videos/15_gerwin_klein.ogg},
    year             = {2009},
    keywords         = {sel4, microkernel, isabelle, formal verification},
    address          = {Big Sky, MT, USA},
    title            = {{seL4}: Formal Verification of an {OS} Kernel},
    pages            = {207--220},
    booktitle        = {ACM Symposium on Operating Systems Principles},
    paperurl         = {https://ts.data61.csiro.au/publications/nicta_full_text/1852.pdf},
    publisher        = {ACM},
    slides           = {http://ts.data61.csiro.au/publications/nicta_slides/1852.pdf}
  }


@book{Li2000,
publisher = {Prentice Hall},
isbn = {0130996513},
year = {2000},
title = {Real-Time systems},
language = {eng},
address = {Upper Saddle River, NJ},
author = {Liu, Jane W. S},
keywords = {Real-time data processing},
lccn = {99051522},
}

@inproceedings{Li1995,
series = {SOSP '95},
issn = {01635980},
pages = {237--250},
publisher = {ACM},
booktitle = {Proceedings of the fifteenth ACM symposium on operating systems principles},
isbn = {0897917154},
year = {1995},
title = {On micro-kernel construction},
language = {eng},
author = {Liedtke, Jochen},
keywords = {Operating Systems ; Mountains ; Copper ; Information Systems ; Construction ; Computer Applications (General) (Ci) ; Proceeding;},
}

@article{VoLaHa2013,
  title={On the expressiveness of fixed-priority scheduling contexts for mixed-criticality scheduling},
  author={V{\"o}lp, Marcus and Lackorzynski, Adam and H{\"a}rtig, Hermann},
  journal={Proc. WMC, RTSS},
  pages={13--18},
  year={2013}
}

@phdthesis{Ly2018,
    author           = {Anna Lyons},
    month            = august,
    year             = {2018},
    title            = {Mixed-Criticality Scheduling and Resource Sharing for High-Assurance Operating Systems},
    note             = {Available from publications page at \url{http://ts.data61.csiro.au/}},
    paperurl         = {https://ts.data61.csiro.au/publications/papers/Lyons:phd.pdf},
    school           = {UNSW}
  }

@mastersthesis{Ho2018,
 author           = {Sebastian Holzapfel},
 month            = nov,
 year             = {2018},
 title            = {User-Level Mixed Criticality Systems Scheduling on Multicore Processors},
 address          = {Sydney, Australia},
 school           = {School of Electrical Engineering and Telecommunication}
}

@inproceedings{StBoKa2010,
	pages = {16--23},
	booktitle = {International Workshop on Operating Systems Platforms for Embedded Real-Time Applications},
	year = {2010},
	title = {Timeslice Donation in Component-Based Systems},
	language = {eng},
	author = {Steinberg, Udo and B{\"o}ttcher, Alexander and Kauer, Bernhard},
}


@inproceedings{MaLiWe2011,
issn = {10801812},
pages = {169--179},
publisher = {IEEE},
booktitle = {2011 17th IEEE Real-Time and Embedded Technology and Applications Symposium},
isbn = {9781612843261},
year = {2011},
title = {Virtual-CPU Scheduling in the Quest Operating System},
language = {eng},
author = {Danish, Matthew and Ye Li and West, Richard},
keywords = {Servers ; Bandwidth ; Instruction Sets ; Real Time Systems ; Multicore Processing ; Radiation Detectors ; Operating Systems ; Real-Time Operating Systems ; Scheduling ; Bandwidth Preserving Servers ; Computer Science},
}


@article{SpShLe1989,
issn = {0922-6443},
abstract = {A real-time system consists of both aperiodic and periodic tasks. Periodic tasks have regular arrival times and hard deadlines. Aperiodic tasks have irregular arrival times and either soft or hard deadlines. In this article, we present a new algorithm, the Sporadic Server algorithm, which greatly improves response times for soft deadline aperiodic tasks and can guarantee hard deadlines for both periodic and aperiodic tasks. The operation of the Sporadic Server algorithm, its performance, and schedulability analysis are discussed and compared with previously published aperiodic service algorithms.},
journal = {Real-Time Systems},
pages = {27--60},
volume = {1},
publisher = {Kluwer Academic Publishers},
number = {1},
year = {1989},
title = {Aperiodic task scheduling for Hard-Real-Time systems},
language = {eng},
address = {Dordrecht},
author = {Sprunt, Brinkley and Sha, Lui and Lehoczky, John},
}


@inproceedings{St2010,
issn = {10801812},
abstract = {<p>The specification of the sporadic server real-time scheduling policy in the IEEE POSIX standard is defective, and needs to be corrected. Via experiments using a POSIX sporadic server implementation under Linux, as well as simulations, we have shown and confirmed previously unreported defects. We propose and demonstrate a corrected sporadic server formulation that eliminates these defects without changes to the syntax of the API or any significant increase in implementation complexity.</p>},
pages = {35--45},
publisher = {IEEE},
booktitle = {2010 16th IEEE Real-Time and Embedded Technology and Applications Symposium},
isbn = {9781424466900},
year = {2010},
title = {Defects of the POSIX Sporadic Server and How to Correct Them},
language = {eng},
author = {Stanovich, Mark and Baker, Theodore P and An-I Wang and Harbour, Michael Gonzalez},
keywords = {Processor Scheduling ; Linux ; Operating Systems ; Real Time Systems ; Network Servers ; Interference ; Scheduling Algorithm ; Computer Languages ; Sporadic Server ; Posix ; Aperiodic Server Scheduling ; Computer Science},
}

@inproceedings{PaWe2008,
issn = {10528725},
abstract = {<p>This paper presents the design of user-level scheduling hierarchies in the composite component-based system. The motivation for this is centered around the design of a system that is both dependable and predictable, and which is configurable to the needs of specific applications. Untrusted application developers can safely develop services and policies, that are isolated in protection domains outside the kernel. To ensure predictability, composite needs to enforce timing control over user-space services. Moreover, it must provide a means by which asynchronous events, such as interrupts, are handled in a timely manner without jeopardizing the system. Towards this end, we describe the features of composite that allow user-defined scheduling policies to be composed for the purposes of combined interrupt and task management. A significant challenge arises from the need to synchronize access to shared data structures (e.g., scheduling queues), without allowing untrusted code to disable interrupts or use atomic instructions that lock the memory bus. Additionally, efficient upcall mechanisms are needed to deliver asynchronous event notifications in accordance with policy-specific priorities, without undue recourse to schedulers. We show how these issues are addressed in Composite, by comparing several hierarchies of scheduling polices, to manage both tasks and the interrupts on which they depend. Studies show how it is possible to implement guaranteed differentiated services as part of the handling of I/O requests from a network device while avoiding livelock. Microbenchmarks indicate that the costs of implementing and invoking user-level schedulers in composite are on par with, or less than, those in other systems, with thread switches more than twice as fast as in Linux.</p>},
pages = {232--243},
publisher = {IEEE},
booktitle = {2008 Real-Time Systems Symposium},
isbn = {9780769534770},
year = {2008},
title = {Predictable Interrupt Management and Scheduling in the Composite Component-Based System},
language = {eng},
author = {Parmer, G and West, R},
keywords = {Yarn ; Kernel ; Protection ; Costs ; Processor Scheduling ; Real Time Systems ; Computer Science ; Timing ; Data Structures ; Switches ; Component-Based Systems ; Operating Systems ; Predictability ; Scheduling ; Computer Science},
}


@INPROCEEDINGS{GaPaPa2020,
  author={P. K. {Gadepalli} and R. {Pan} and G. {Parmer}},
  booktitle={2020 IEEE Real-Time and Embedded Technology and Applications Symposium (RTAS)},
  title={Slite: OS Support for Near Zero-Cost, Configurable Scheduling *},
  year={2020},
  volume={},
  number={},
  pages={160-173},}

@INPROCEEDINGS{Ga2017,
  author={P. K. {Gadepalli} and R. {Gifford} and L. {Baier} and M. {Kelly} and G. {Parmer}},
  booktitle={2017 IEEE Real-Time Systems Symposium (RTSS)},
  title={Temporal Capabilities: Access Control for Time},
  year={2017},
  volume={},
  number={},
  pages={56-67},}


@article{Ha1985,
issn = {0163-5980},
journal = {ACM SIGOPS Operating Systems Review},
pages = {8--25},
volume = {19},
publisher = {ACM},
number = {4},
year = {1985},
title = {KeyKOS architecture},
language = {eng},
author = {Hardy, Norman},
keywords = {Computer Science},
}

@article{Cofer18,
    issn             = {0018-9162},
    author           = {Cofer, Darren and Gacek, Andrew and Backes, John and Whalen, Michael and Pike, Lee and Foltzer, Adam
                        and Podhradsky, Michael and Klein, Gerwin and Kuz, Ihor and Andronick, June and Heiser, Gernot and
                        Stuart, Douglas},
    month            = nov,
    date             = {2018-11-15},
    doi              = {https://doi.org/10.1109/MC.2018.2876051},
    year             = {2018},
    title            = {{A} Formal Approach to Constructing Secure Air Vehicle Software},
    pages            = {14-23},
    volume           = {51},
    journal          = {IEEE Computer},
    paperurl         = {https://ts.data61.csiro.au/publications/csiro_full_text//Cofer_GBWPFPKKAHS_18.pdf},
    issue            = {11},
    publisher        = {IEEE}
  }
